
package ppt.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "PedraPaperTisores", targetNamespace = "http://ws.ppt/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface PedraPaperTisores {


    /**
     * 
     * @return
     *     returns java.util.List<ppt.ws.Partida>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getPartidas", targetNamespace = "http://ws.ppt/", className = "ppt.ws.GetPartidas")
    @ResponseWrapper(localName = "getPartidasResponse", targetNamespace = "http://ws.ppt/", className = "ppt.ws.GetPartidasResponse")
    @Action(input = "http://ws.ppt/PedraPaperTisores/getPartidasRequest", output = "http://ws.ppt/PedraPaperTisores/getPartidasResponse")
    public List<Partida> getPartidas();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setPartidas", targetNamespace = "http://ws.ppt/", className = "ppt.ws.SetPartidas")
    @ResponseWrapper(localName = "setPartidasResponse", targetNamespace = "http://ws.ppt/", className = "ppt.ws.SetPartidasResponse")
    @Action(input = "http://ws.ppt/PedraPaperTisores/setPartidasRequest", output = "http://ws.ppt/PedraPaperTisores/setPartidasResponse")
    public void setPartidas(
        @WebParam(name = "arg0", targetNamespace = "")
        List<Partida> arg0);

    /**
     * 
     * @param codiPartida
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "iniciarJoc", targetNamespace = "http://ws.ppt/", className = "ppt.ws.IniciarJoc")
    @ResponseWrapper(localName = "iniciarJocResponse", targetNamespace = "http://ws.ppt/", className = "ppt.ws.IniciarJocResponse")
    @Action(input = "http://ws.ppt/PedraPaperTisores/iniciarJocRequest", output = "http://ws.ppt/PedraPaperTisores/iniciarJocResponse")
    public boolean iniciarJoc(
        @WebParam(name = "codiPartida", targetNamespace = "")
        String codiPartida);

    /**
     * 
     * @param jugador
     * @param codiPartida
     */
    @WebMethod
    @RequestWrapper(localName = "afegirJugador", targetNamespace = "http://ws.ppt/", className = "ppt.ws.AfegirJugador")
    @ResponseWrapper(localName = "afegirJugadorResponse", targetNamespace = "http://ws.ppt/", className = "ppt.ws.AfegirJugadorResponse")
    @Action(input = "http://ws.ppt/PedraPaperTisores/afegirJugadorRequest", output = "http://ws.ppt/PedraPaperTisores/afegirJugadorResponse")
    public void afegirJugador(
        @WebParam(name = "codiPartida", targetNamespace = "")
        String codiPartida,
        @WebParam(name = "jugador", targetNamespace = "")
        String jugador);

    /**
     * 
     * @param jugador
     * @param tipus
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "moureJugador", targetNamespace = "http://ws.ppt/", className = "ppt.ws.MoureJugador")
    @ResponseWrapper(localName = "moureJugadorResponse", targetNamespace = "http://ws.ppt/", className = "ppt.ws.MoureJugadorResponse")
    @Action(input = "http://ws.ppt/PedraPaperTisores/moureJugadorRequest", output = "http://ws.ppt/PedraPaperTisores/moureJugadorResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://ws.ppt/PedraPaperTisores/moureJugador/Fault/NotFoundException")
    })
    public void moureJugador(
        @WebParam(name = "jugador", targetNamespace = "")
        String jugador,
        @WebParam(name = "tipus", targetNamespace = "")
        int tipus)
        throws NotFoundException_Exception
    ;

    /**
     * 
     * @param codiPartida
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "acabarJoc", targetNamespace = "http://ws.ppt/", className = "ppt.ws.AcabarJoc")
    @ResponseWrapper(localName = "acabarJocResponse", targetNamespace = "http://ws.ppt/", className = "ppt.ws.AcabarJocResponse")
    @Action(input = "http://ws.ppt/PedraPaperTisores/acabarJocRequest", output = "http://ws.ppt/PedraPaperTisores/acabarJocResponse")
    public boolean acabarJoc(
        @WebParam(name = "codiPartida", targetNamespace = "")
        String codiPartida);

    /**
     * 
     * @param codiPartida
     * @return
     *     returns int
     * @throws NotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "consultarEstatPartida", targetNamespace = "http://ws.ppt/", className = "ppt.ws.ConsultarEstatPartida")
    @ResponseWrapper(localName = "consultarEstatPartidaResponse", targetNamespace = "http://ws.ppt/", className = "ppt.ws.ConsultarEstatPartidaResponse")
    @Action(input = "http://ws.ppt/PedraPaperTisores/consultarEstatPartidaRequest", output = "http://ws.ppt/PedraPaperTisores/consultarEstatPartidaResponse", fault = {
        @FaultAction(className = NotFoundException_Exception.class, value = "http://ws.ppt/PedraPaperTisores/consultarEstatPartida/Fault/NotFoundException")
    })
    public int consultarEstatPartida(
        @WebParam(name = "codiPartida", targetNamespace = "")
        String codiPartida)
        throws NotFoundException_Exception
    ;

}
